@use './colors' as c;

*,
*::after,
*::before {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html {
	font-size: 62.5%;
	scroll-behavior: smooth;
}

body {
	font-family: 'Barlow Semi Condensed', sans-serif;
	font-size: 1.6rem;
	background-color: c.$Light-grayish-blue;
	min-height: 100vh;
	padding: 1.5em; // margin: 2em przeniosłam z .wrapper i zmieniłam na padding równy row-gap
	// wyśrodkowanie:
	display: flex;
	align-items: center;
	justify-content: center;
}

.wrapper {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-auto-rows: minmax(100px, auto);
	row-gap: 1.5em; // jednostki em raczej się nie stosuje - lepiej rem albo px
	max-width: 600px;
}

// zamiast używać numerowanych klas box1, box2 itd. można też użyć
// selectorów :first-child/:nth-child()
// wtedy HTML dla każdego carda jest identyczny
// i nie musisz edytować numeracji jakbyć chciała zmienić kolejność
// w HTMLu :)
.box:first-child {
	grid-column: 1/3;
	background-color: c.$Moderate-violet;
	background-image: url('../img/bg-pattern-quotation.svg');
	background-repeat: no-repeat;
	background-position: top 0 right 2em;
}
.box:nth-child(2) {
	grid-column: 1/3;
	grid-row: 2/3;
	background-color: c.$Very-dark-grayish-blue;
}
.box:nth-child(3) {
	grid-column: 1/3;
	grid-row: 3/4;
	background-color: c.$White;
}
.box:nth-child(4) {
	grid-column: 1/3;
	grid-row: 4/5;
	background-color: c.$Very-dark-blackish-blue;
}
.box:nth-child(5) {
	grid-column: 1/3;
	grid-row: 5/6;
	background-color: c.$White;
}

.box {
	padding: 2em;
	border-radius: 10px;

	&__text-one {
		color: c.$Light-gray;
		font-size: 2rem;
		font-weight: 600;
		text-align: left; // taka jest domyślna wartość - nie trzeba jej pisać :)
		margin-bottom: 1em;
	}

	&__text-two {
		color: c.$Light-gray;
		font-size: 1.3rem;
		font-weight: 500;
		opacity: 0.7;
		line-height: 20px;
	}

	img {
		width: 35px;
		border-radius: 50%;
	}

	&__header {
		display: flex;
		margin-bottom: 1em;

		&-img1 {
			border: 2px solid c.$Light-gray;
		}
		&-img2 {
			border: 2px solid c.$Moderate-violet;
		}

		&-text {
			margin-left: 1em;

			h2 {
				font-size: 1.6rem;
				color: c.$Light-gray;
				font-weight: 600;
			}

			p {
				font-size: 1.3rem;
				font-weight: 500;
				color: c.$Light-gray;
				opacity: 0.5;
			}
		}
	}
}

.text-dark {
	h2,
	p {
		color: c.$Very-dark-grayish-blue;
	}
}

.text__gray {
	color: c.$Very-dark-grayish-blue;

	&-opacity {
		color: c.$Very-dark-grayish-blue;
	}
}

.text__white {
	color: c.$Light-grayish-blue;

	&-opacity {
		color: c.$Light-grayish-blue;
	}
}

@media (min-width: 1200px) {
    .wrapper {
        max-width: 1200px;
        width: 100%; // niepotrzebne - display: grid automatycznie zajmuje 100% szerokości
        grid-template-columns: repeat(4, 1fr); // nie ma sensu dzielić na 12 jak wizualnie mamy tylko 4 kolumny, trudniej się numeruje :)
        grid-auto-rows: (2, 1fr); // czegoś tu brakło, niepoprawna składnia - miało być minmax?
        column-gap: 1.5em;
    }
    
    .box:first-child {
        grid-column: 1/3;
        background-position: top 0 right 6em;
    }
    .box:nth-child(2) {
        grid-column: 3/4;
        grid-row: 1/2;
    }
    .box:nth-child(3) {
        grid-column: 1/2;
        grid-row: 2/3;
    }
    .box:nth-child(4) {
        grid-column: 2/4;
        grid-row: 2/3;
    }
    .box:nth-child(5) {
        grid-column: 4/5;
        grid-row: 1/3;
    }
}